---
  swagger: "2.0"
  tags:
    - name: "Circle API"
      description: "API to create a circle ,delete a circle, get list of all circles"
    - name : "Mailbox API"
      description: "API to create and delete mailbox"
    - name: "Follow API"
      description: "API to unfollow and follow circles" 
    - name: "Publish Activity API"
      description: "API to Publish Activity" 
    - name: "Bulk API"
      description: "API to receive the notification"
    - name: "L1R routes API"
      description: "API to add,remove,list routes"
    - name: "Multiplexer API"
      description: "API to create,delete,list all multiplexers"
    - name: "Multiplexer routes API"
      description: "API to add,remove,list routes"
    - name: "Routes API"
      description: "API to create and delete routes"
  info: 
    title: "Calvin - Activity Log"
    version: "v1"
    category: "Circle"
  paths: 
    /circle:
      post:
        tags:
          - "Circle API"
        summary: "Create Circle"
        produces: 
          - "application/json"
        parameters:
          - name: "Authorization"
            in: "header"
            description: "Authentication key"
            required: false
            type: "string"
        responses: 
          201: 
            description: circle created.           
    /circle/{circleId}:
      delete:
        tags:
          - "Circle API"
        summary: "Delete Circle"        
        produces:
          -"application/json"
        parameters:
        - name: "circleId"
          in: "path"
          description: "Circle id to delete"
          required: true
          type: "string"
          format: "int64"
        - name: "Authorization"
          in: "header"
          description: "Authentication key"
          required: false
          type: "string"
        responses:
          200:
            description: circle deleted.
    /circle/getallcircles:
      get:
        tags:
          - "Circle API"
        summary: "Gets the list of  Circles available"        
        produces:
          -"application/json"
        parameters:
        - name: "limit"
          in: "query"
          description: "Number of circles need to be displayed"
          required: false
          type: "string"
          format: "int64"        
        - name: "Authorization"
          in: "header"
          description: "Authentication key"
          required: false
          type: "string"
        responses:
          200:
            description: List of circles.
    /circle/getallcircles:
      get:
        tags:
          - "Circle API"
        summary: "Gets the list of  Circles available"        
        produces:
          -"application/json"
        parameters:
        
        - name: "Authorization"
          in: "header"
          description: "Authentication key"
          required: false
          type: "string"
        responses:
          200:
            description: Number of circles need to be displayed.            
    /mailbox:
      post:
        tags:
          - "Mailbox API"
        summary: "Create Mailbox"
        produces: 
          - "application/json"
        parameters:
          - name: "Authorization"
            in: "header"
            description: "Authentication key"
            required: false
            type: "string"
        responses: 
          201: 
            description: Creates a mailbox. 
    /mailbox/{mailboxId}:
      delete:
        tags:
          - "Mailbox API"
        summary: "Delete Mailbox"
        produces:
          -"application/json"
        parameters:
        - name: "mailboxId"
          in: "path"
          description: "Mailbox id to delete"
          required: true
          type: "string"
          format: "int64"
        - name: "Authorization"
          in: "header"
          description: "Authentication key"
          required: false
          type: "string"
        responses:
          200:
            description: Deletes a mailbox.             
    /mailbox/{mailboxId}/circle/{circleId}:
      post:
        tags:
          - "Follow API"
        summary: "Follow a circle"
        produces: 
          - "application/json"
        responses: 
          201: 
            description: Follow a circle. 
        parameters:
        - name: "mailboxId"
          in: "path"
          description: "Mailbox id to add"
          required: true
          type: "string"
          format: "int64"
        - name: "circleId"
          in: "path"
          description: "Circle id to add"
          required: true
          type: "string"
          format: "int64"
        - name: "Authorization"
          in: "header"
          description: "Authentication key"
          required: false
          type: "string"
      delete:
        tags:
          - "Follow API"
        summary: "Unfollow a circle"
        
        produces:
          -"application/json"
        parameters:
        - name: "mailboxId"
          in: "path"
          description: "Circle id to delete"
          required: true
          type: "string"
          format: "int64"
        - name: "circleId"
          in: "path"
          description: "Circle id to add"
          required: true
          type: "string"
          format: "int64" 
        - name: "Authorization"
          in: "header"
          description: "Authentication key"
          required: false
          type: "string" 
        responses:
          200:
            description: Unfollow a circle.
    /mailbox/getfollowers/circle/{circleId}:            
      get:
        tags:
          - "Follow API"
        summary: "List of followers"
        produces:
          -"application/json"
        parameters:
        - name: "circleId"
          in: "path"
          description: "Circle id"
          required: true
          type: "string"
          format: "int64"
        - name: "limit"
          in: "query"
          description: "limit"
          required: false
          type: "string"
          format: "int64" 
        - name: "before"
          in: "query"
          description: "date"
          required: false
          type: "string"
          format: "int64" 
        - name: "after"
          in: "query"
          description: "date"
          required: false
          type: "string"
          format: "int64"                     
        - name: "Authorization"
          in: "header"
          description: "Authentication key"
          required: true
          type: "string" 
        responses:
          200:
            description: List of followers.
    /circle/{circleId}/activity:
       post:
        tags:
          - "Publish Activity API"
        summary: "Publish activity"
        produces: 
          - "application/json"
          - "application/xml"
        consumes: 
          - "application/json"
          - "application/xml"
        responses: 
          201: 
            description: Published Activity. 
        parameters:
        - name: "circleId"
          in: "path"
          description: "circle Id to publish an activity"
          required: true
          type: "string"
          format: "int64"
        - in: "body"
          name: "body"
          description: "Publish any activity"
          required: "true"
          paramType: "body"
          type: "string"
          format: "int64"
          schema:
            type: object
            required:
              - payload
            properties:
              - type: string
        - name: "Authorization"
          in: "header"
          description: "Authentication key"
          required: false
          type: "string"
    /mailbox/{mailboxId}/activitytomailbox:
       post:
        tags:
          - "Publish Activity API"
        summary: "Publish activity"
        produces: 
          - "application/json"
          - "application/xml"
        consumes: 
          - "application/json"
          - "application/xml"
        responses: 
          201: 
            description: Published Activity. 
        parameters:
        - name: "mailboxId"
          in: "path"
          description: "mailbox Id to publish an activity"
          required: true
          type: "string"
          format: "int64"
        - in: "body"
          name: "body"
          description: "Publish any activity"
          required: "true"
          paramType: "body"
          type: "string"
          format: "int64"
          schema:
            type: object
            required:
              - payload
            properties:
              - type: string
        - name: "Authorization"
          in: "header"
          description: "Authentication key"
          required: false
          type: "string"
    /mailbox/{mailboxId}/activity:
       get:
        tags:
          - "Publish Activity API"
        summary: "GET Activity"
        produces:
          - "application/json"
        responses:
          200:
            description: Get Activity from Mailbox.
        parameters:
        - name: "mailboxId"
          in: "path"
          description: "mailboxId to get activity"
          required: true
          type: "string"
          format: "int64" 
        - name: "Authorization"
          in: "header"
          description: "Authentication key"
          required: false
          type: "string"
    /mailboxesopen/{offset}/{count}:
       get:
        tags:
          - "Bulk API"
        summary: "Gets the mailboxes which are open"
        produces:
          - "application/json"
        responses:
          200:
            description: Get the mailboxes which are open.
        parameters:
        - name: "offset"
          in: "path"
          description: "offset value"
          required: true
          type: "string"
          format: "int64"
        - name: "count"
          in: "path"
          description: "count"
          required: true
          type: "string"
          format: "int64"
    /bulk/{circleId}:
      post:
        tags:
          - "Bulk API"
        summary: "Add more than one followers for a circle"
        produces:
          - "application/json"
        responses:
          200:
            description: Add more than one followers for a circle
        parameters:
        - name: "circleId"
          in: "path"
          description: "circle id"
          required: true
          type: "uuid"
          format: "int64"        
        - in: "body"
          name: "body"
          description: "Enter the mailbox id"
          required: "true"
          paramType: "body"
          type: "uuid"
          format: "int64"
          schema:
            type: object
            required:
              - id
            properties:
              - type: uuid
        - name: "Authorization"
          in: "header"
          description: "Authentication key"
          required: true
          type: "string" 
    /l1route/{circleId}/{multiplexerId}:
       post:
        tags:
          - "L1R routes API"
        summary: "API to add route"
        produces: 
          - "application/json"
        responses: 
          201: 
            description: Add route. 
        parameters:
        - name: "circleId"
          in: "path"
          description: "circle Id to add route"
          required: true
          type: "string"
          format: "int64"
        - name: "multiplexerId"
          in: "path"
          description: "multiplexer Id to add route"
          required: true
          type: "string"
          format: "int64"
       delete:
        tags:
          - "L1R routes API"
        summary: "API to delete route"
        produces: 
          - "application/json"
        responses: 
          201: 
            description: Delete route. 
        parameters:
        - name: "circleId"
          in: "path"
          description: "circle Id to delete route"
          required: true
          type: "string"
          format: "int64"
        - name: "multiplexerId"
          in: "path"
          description: "multiplexer Id to delete route"
          required: true
          type: "string"
          format: "int64"
    /l1route/{circleId}:
       get:
        tags:
          - "L1R routes API"
        summary: "Get routes for circle"
        produces:
          - "application/json"
        responses:
          200:
            description: Get routes for circle.
        parameters:
        - name: "circleId"
          in: "path"
          description: "circleId to get routes"
          required: true
          type: "string"
          format: "int64"
    /l1route:
       get:
        tags:
          - "L1R routes API"
        summary: "Get list of routes"
        produces:
          - "application/json"
        responses:
          200:
            description: Get list of routes.
    /multiplexer/{mx}:
       post:
        tags:
          - "Multiplexer API"
        summary: "API to create multiplexer"
        produces: 
          - "application/json"
        responses: 
          201: 
            description: multiplexer created. 
        parameters:
        - name: "mx"
          in: "path"
          description: "creates a multiplexer"
          required: true
          type: "string"
          format: "int64"
       delete:
        tags:
          - "Multiplexer API"
        summary: "API to create multiplexer"
        produces: 
          - "application/json"
        responses: 
          201: 
            description: multiplexer created. 
        parameters:
        - name: "mx"
          in: "path"
          description: "creates a multiplexer"
          required: true
          type: "string"
          format: "int64"
    /multiplexer:
       get:
        tags:
          - "Multiplexer API"
        summary: "Get list of multiplexers"
        produces:
          - "application/json"
        responses:
          200:
            description: lists the multiplexers.
    /multiplexer_route/{namespace}/{circleId}/{mailboxId}:
       post:
        tags:
          - "Multiplexer routes API"
        summary: "API to add route"
        produces: 
          - "application/json"
        responses: 
          201: 
            description: Routes added. 
        parameters:
        - name: "namespace"
          in: "path"
          description: "multiplexer Id to add route"
          required: true
          type: "string"
          format: "int64"
        - name: "circleId"
          in: "path"
          description: "circle Id to add route"
          required: true
          type: "string"
          format: "int64"
        - name: "mailboxId"
          in: "path"
          description: "mailbox Id to add route"
          required: true
          type: "string"
          format: "int64"
       delete:
        tags:
          - "Multiplexer routes API"
        summary: "API to delete route"
        produces: 
          - "application/json"
        responses: 
          201: 
            description: Routes deleted. 
        parameters:
        - name: "namespace"
          in: "path"
          description: "multiplexer Id to delete route"
          required: true
          type: "string"
          format: "int64"
        - name: "circleId"
          in: "path"
          description: "circle Id to delete route"
          required: true
          type: "string"
          format: "int64"
        - name: "mailboxId"
          in: "path"
          description: "mailbox Id to delete route"
          required: true
          type: "string"
          format: "int64"
    /multiplexer_route/{namespace}/{circleId}:
       get:
        tags:
          - "Multiplexer routes API"
        summary: "Get routes for circle"
        produces:
          - "application/json"
        responses:
          200:
            description: Get routes for circle.
        parameters:
        - name: "namespace"
          in: "path"
          description: "multiplexerId to get routes"
          required: true
          type: "string"
          format: "int64"
        - name: "circleId"
          in: "path"
          description: "circleId to get routes"
          required: true
          type: "string"
          format: "int64"
    /multiplexer_route/{namespace}:
       get:
        tags:
          - "Multiplexer routes API"
        summary: "Get list of routes"
        produces:
          - "application/json"
        responses:
          200:
            description: Get list of routes.
        parameters:
        - name: "namespace"
          in: "path"
          description: "multiplexerId to get routes"
          required: true
          type: "string"
          format: "int64"
    /routes/{circleId}/{userId}:
       post:
        tags:
          - "Routes API"
        summary: "API to create route"
        produces: 
          - "application/json"
        responses: 
          201: 
            description: route created. 
        parameters:
        - name: "circleId"
          in: "path"
          description: "circle Id to create route"
          required: true
          type: "string"
          format: "int64"
        - name: "userId"
          in: "path"
          description: "user Id to create route"
          required: true
          type: "string"
          format: "int64"
    /routes/{circleId}/{userId}/{multiplexerId}:
       delete:
        tags:
          - "Routes API"
        summary: "API to delete route"
        produces: 
          - "application/json"
        responses: 
          201: 
            description: route deleted. 
        parameters:
        - name: "circleId"
          in: "path"
          description: "circle Id to create route"
          required: true
          type: "string"
          format: "int64"
        - name: "userId"
          in: "path"
          description: "userID Id to create route"
          required: true
          type: "string"
          format: "int64"
        - name: "multiplexerId"
          in: "path"
          description: "multiplexer Id to create route"
          required: true
          type: "string"
          format: "int64"   